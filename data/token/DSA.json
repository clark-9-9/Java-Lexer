[
  {
    "value": "import",
    "line": 1
  },
  {
    "value": "java.util.Arrays;",
    "line": 1
  },
  {
    "value": "import",
    "line": 2
  },
  {
    "value": "java.util.Stack;",
    "line": 2
  },
  {
    "value": "public",
    "line": 5
  },
  {
    "value": "class",
    "line": 5
  },
  {
    "value": "DSA",
    "line": 5
  },
  {
    "value": "{",
    "line": 5
  },
  {
    "value": "boolean",
    "line": 6
  },
  {
    "value": "isTrue",
    "line": 6
  },
  {
    "value": "=",
    "line": 6
  },
  {
    "value": "true;",
    "line": 6
  },
  {
    "value": "double",
    "line": 8
  },
  {
    "value": "pi",
    "line": 8
  },
  {
    "value": "=",
    "line": 8
  },
  {
    "value": "3.14;",
    "line": 8
  },
  {
    "value": "public",
    "line": 9
  },
  {
    "value": "static",
    "line": 9
  },
  {
    "value": "void",
    "line": 9
  },
  {
    "value": "main(String[]",
    "line": 9
  },
  {
    "value": "args)",
    "line": 9
  },
  {
    "value": "{",
    "line": 9
  },
  {
    "value": "reverseArray();",
    "line": 10
  },
  {
    "value": "}",
    "line": 11
  },
  {
    "value": "static",
    "line": 13
  },
  {
    "value": "boolean",
    "line": 13
  },
  {
    "value": "matchingPars(String",
    "line": 13
  },
  {
    "value": "str)",
    "line": 13
  },
  {
    "value": "{",
    "line": 13
  },
  {
    "value": "Stack<Character>",
    "line": 14
  },
  {
    "value": "stack",
    "line": 14
  },
  {
    "value": "=",
    "line": 14
  },
  {
    "value": "new",
    "line": 14
  },
  {
    "value": "Stack<>();",
    "line": 14
  },
  {
    "value": "for(int",
    "line": 16
  },
  {
    "value": "i",
    "line": 16
  },
  {
    "value": "=",
    "line": 16
  },
  {
    "value": "0;",
    "line": 16
  },
  {
    "value": "i",
    "line": 16
  },
  {
    "value": "<",
    "line": 16
  },
  {
    "value": "str.length();",
    "line": 16
  },
  {
    "value": "i++)",
    "line": 16
  },
  {
    "value": "{",
    "line": 16
  },
  {
    "value": "char",
    "line": 17
  },
  {
    "value": "ch",
    "line": 17
  },
  {
    "value": "=",
    "line": 17
  },
  {
    "value": "str.charAt(i);",
    "line": 17
  },
  {
    "value": "boolean",
    "line": 18
  },
  {
    "value": "open",
    "line": 18
  },
  {
    "value": "=",
    "line": 18
  },
  {
    "value": "ch",
    "line": 18
  },
  {
    "value": "==",
    "line": 18
  },
  {
    "value": "'('",
    "line": 18
  },
  {
    "value": "||",
    "line": 18
  },
  {
    "value": "ch",
    "line": 18
  },
  {
    "value": "==",
    "line": 18
  },
  {
    "value": "'['",
    "line": 18
  },
  {
    "value": "||",
    "line": 18
  },
  {
    "value": "ch",
    "line": 18
  },
  {
    "value": "==",
    "line": 18
  },
  {
    "value": "'{';",
    "line": 18
  },
  {
    "value": "boolean",
    "line": 19
  },
  {
    "value": "close",
    "line": 19
  },
  {
    "value": "=",
    "line": 19
  },
  {
    "value": "ch",
    "line": 19
  },
  {
    "value": "==",
    "line": 19
  },
  {
    "value": "')'",
    "line": 19
  },
  {
    "value": "||",
    "line": 19
  },
  {
    "value": "ch",
    "line": 19
  },
  {
    "value": "==",
    "line": 19
  },
  {
    "value": "']'",
    "line": 19
  },
  {
    "value": "||",
    "line": 19
  },
  {
    "value": "ch",
    "line": 19
  },
  {
    "value": "==",
    "line": 19
  },
  {
    "value": "'}';",
    "line": 19
  },
  {
    "value": "if(!open",
    "line": 21
  },
  {
    "value": "&&",
    "line": 21
  },
  {
    "value": "!close)",
    "line": 21
  },
  {
    "value": "continue;",
    "line": 21
  },
  {
    "value": "if(close",
    "line": 22
  },
  {
    "value": "&&",
    "line": 22
  },
  {
    "value": "stack.isEmpty())",
    "line": 22
  },
  {
    "value": "return",
    "line": 22
  },
  {
    "value": "false;",
    "line": 22
  },
  {
    "value": "if(open)",
    "line": 24
  },
  {
    "value": "{",
    "line": 24
  },
  {
    "value": "stack.push(ch);",
    "line": 25
  },
  {
    "value": "}",
    "line": 26
  },
  {
    "value": "else",
    "line": 26
  },
  {
    "value": "{",
    "line": 26
  },
  {
    "value": "char",
    "line": 27
  },
  {
    "value": "last",
    "line": 27
  },
  {
    "value": "=",
    "line": 27
  },
  {
    "value": "stack.pop();",
    "line": 27
  },
  {
    "value": "if(",
    "line": 29
  },
  {
    "value": "((last",
    "line": 30
  },
  {
    "value": "==",
    "line": 30
  },
  {
    "value": "'(')",
    "line": 30
  },
  {
    "value": "&&",
    "line": 30
  },
  {
    "value": "(ch",
    "line": 30
  },
  {
    "value": "!=",
    "line": 30
  },
  {
    "value": "')'))",
    "line": 30
  },
  {
    "value": "||",
    "line": 30
  },
  {
    "value": "((last",
    "line": 31
  },
  {
    "value": "==",
    "line": 31
  },
  {
    "value": "'{')",
    "line": 31
  },
  {
    "value": "&&",
    "line": 31
  },
  {
    "value": "(ch",
    "line": 31
  },
  {
    "value": "!=",
    "line": 31
  },
  {
    "value": "'}'))",
    "line": 31
  },
  {
    "value": "||",
    "line": 31
  },
  {
    "value": "((last",
    "line": 32
  },
  {
    "value": "==",
    "line": 32
  },
  {
    "value": "'[')",
    "line": 32
  },
  {
    "value": "&&",
    "line": 32
  },
  {
    "value": "(ch",
    "line": 32
  },
  {
    "value": "!=",
    "line": 32
  },
  {
    "value": "']'))",
    "line": 32
  },
  {
    "value": ")",
    "line": 33
  },
  {
    "value": "{",
    "line": 33
  },
  {
    "value": "return",
    "line": 34
  },
  {
    "value": "false;",
    "line": 34
  },
  {
    "value": "}",
    "line": 35
  },
  {
    "value": "}",
    "line": 36
  },
  {
    "value": "}",
    "line": 37
  },
  {
    "value": "if(!stack.isEmpty())",
    "line": 39
  },
  {
    "value": "return",
    "line": 39
  },
  {
    "value": "false;",
    "line": 39
  },
  {
    "value": "return",
    "line": 40
  },
  {
    "value": "true;",
    "line": 40
  },
  {
    "value": "}",
    "line": 41
  },
  {
    "value": "static",
    "line": 44
  },
  {
    "value": "void",
    "line": 44
  },
  {
    "value": "convertDecimalToBinary()",
    "line": 44
  },
  {
    "value": "{",
    "line": 44
  },
  {
    "value": "int",
    "line": 45
  },
  {
    "value": "num",
    "line": 45
  },
  {
    "value": "=",
    "line": 45
  },
  {
    "value": "55;",
    "line": 45
  },
  {
    "value": "Stack<Integer>",
    "line": 46
  },
  {
    "value": "stack",
    "line": 46
  },
  {
    "value": "=",
    "line": 46
  },
  {
    "value": "new",
    "line": 46
  },
  {
    "value": "Stack<>();",
    "line": 46
  },
  {
    "value": "while(num",
    "line": 48
  },
  {
    "value": "!=",
    "line": 48
  },
  {
    "value": "0)",
    "line": 48
  },
  {
    "value": "{",
    "line": 48
  },
  {
    "value": "int",
    "line": 49
  },
  {
    "value": "calc",
    "line": 49
  },
  {
    "value": "=",
    "line": 49
  },
  {
    "value": "num",
    "line": 49
  },
  {
    "value": "%",
    "line": 49
  },
  {
    "value": "2;",
    "line": 49
  },
  {
    "value": "stack.push(calc);",
    "line": 50
  },
  {
    "value": "num",
    "line": 51
  },
  {
    "value": "=",
    "line": 51
  },
  {
    "value": "num",
    "line": 51
  },
  {
    "value": "/",
    "line": 51
  },
  {
    "value": "2;",
    "line": 51
  },
  {
    "value": "}",
    "line": 52
  },
  {
    "value": "while(stack.size()",
    "line": 54
  },
  {
    "value": "!=",
    "line": 54
  },
  {
    "value": "0)",
    "line": 54
  },
  {
    "value": "{",
    "line": 54
  },
  {
    "value": "System.out.print(stack.pop());",
    "line": 55
  },
  {
    "value": "}",
    "line": 56
  },
  {
    "value": "}",
    "line": 57
  },
  {
    "value": "static",
    "line": 59
  },
  {
    "value": "void",
    "line": 59
  },
  {
    "value": "reverseArray()",
    "line": 59
  },
  {
    "value": "{",
    "line": 59
  },
  {
    "value": "int[]",
    "line": 60
  },
  {
    "value": "arr",
    "line": 60
  },
  {
    "value": "=",
    "line": 60
  },
  {
    "value": "{1,2,3,4,5,6};",
    "line": 60
  },
  {
    "value": "Stack<Integer>",
    "line": 61
  },
  {
    "value": "stack",
    "line": 61
  },
  {
    "value": "=",
    "line": 61
  },
  {
    "value": "new",
    "line": 61
  },
  {
    "value": "Stack<>();",
    "line": 61
  },
  {
    "value": "for(int",
    "line": 63
  },
  {
    "value": "ele:",
    "line": 63
  },
  {
    "value": "arr)",
    "line": 63
  },
  {
    "value": "{",
    "line": 63
  },
  {
    "value": "stack.push(ele);",
    "line": 64
  },
  {
    "value": "}",
    "line": 65
  },
  {
    "value": "for(int",
    "line": 67
  },
  {
    "value": "i",
    "line": 67
  },
  {
    "value": "=",
    "line": 67
  },
  {
    "value": "0;",
    "line": 67
  },
  {
    "value": "i",
    "line": 67
  },
  {
    "value": "<",
    "line": 67
  },
  {
    "value": "arr.length;",
    "line": 67
  },
  {
    "value": "i++)",
    "line": 67
  },
  {
    "value": "{",
    "line": 67
  },
  {
    "value": "arr[i]",
    "line": 68
  },
  {
    "value": "=",
    "line": 68
  },
  {
    "value": "stack.pop();",
    "line": 68
  },
  {
    "value": "}",
    "line": 69
  },
  {
    "value": "System.out.println(",
    "line": 71
  },
  {
    "value": "Arrays.toString(arr)",
    "line": 72
  },
  {
    "value": ");",
    "line": 73
  },
  {
    "value": "}",
    "line": 74
  },
  {
    "value": "}",
    "line": 75
  }
]